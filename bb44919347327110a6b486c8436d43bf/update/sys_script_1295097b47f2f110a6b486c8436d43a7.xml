<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_393895_credit_0_credit_bucket</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Calculate Balance Amount</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    // 	// Get the value of the trigger field
    //     var amount = current.getValue('amount');

    //     // Auto-populate the target field based on the trigger field value
    //     current.setValue('balance_amount', amount);

    // Instantiate the RateHelper script include
    var rateHelper = new RateHelper();

    // Use the helper function
    //     var rateField = rateHelper.getRateField(incidentGR.priority);

    // Define the company name (replace with actual company name)
    var companyName = 'SAP';

    // Get the company record
    var companyGR = new GlideRecord('core_company');
    companyGR.addQuery('name', companyName);
    companyGR.query();
    if (!companyGR.next()) {
        gs.error('Company record not found for: ' + companyName);
        return;
    }

    // Get the Company Rates record for the specified date range
    var companyRatesGR = new GlideRecord('x_393895_credit_0_company_extensible');
    companyRatesGR.addQuery('company', companyGR.getUniqueValue());
    companyRatesGR.addQuery('valid_from', '<=', new GlideDate());
    companyRatesGR.addQuery('valid_to', '>=', new GlideDate());
    companyRatesGR.query();
    if (!companyRatesGR.next()) {
        gs.error('Company Rates record not found for: ' + companyName);
        return;
    }

    // Initialize the Balance Amount with the Credit Bucket amount
    var balanceAmount = parseFloat(companyGR.getValue('balance_amount'));

    // Query Time Worked records related to incidents for the specified company
    var timeWorkedGR = new GlideRecord('task_time_worked');
    timeWorkedGR.addEncodedQuery('task.sys_class_name=incident^task.company=' + companyGR.getUniqueValue());
    timeWorkedGR.query();	
	// Loop through Time Worked records to calculate the total cost
    while (timeWorkedGR.next()) {
        var incidentGR = timeWorkedGR.incident;
//         var rateField = getRateField(incidentGR.priority);
		var rateField = rateHelper.getRateField(incidentGR.priority);

        // Calculate the total cost for the Time Worked entry
        var totalCost = parseFloat(timeWorkedGR.getValue('hours')) * parseFloat(companyRatesGR.getValue(rateField));

        // Subtract the total cost from the Balance Amount
        balanceAmount -= totalCost;
    }

    // Update the Credit Bucket's Balance Amount
    companyGR.setValue('balance_amount', balanceAmount);
    companyGR.update();

    gs.info('Balance Amount calculated and updated for ' + companyName + ': ' + balanceAmount);


})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-12-05 21:53:26</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>1295097b47f2f110a6b486c8436d43a7</sys_id>
        <sys_mod_count>8</sys_mod_count>
        <sys_name>Calculate Balance Amount</sys_name>
        <sys_overrides/>
        <sys_package display_value="Credit bucket" source="x_393895_credit_0">bb44919347327110a6b486c8436d43bf</sys_package>
        <sys_policy/>
        <sys_scope display_value="Credit bucket">bb44919347327110a6b486c8436d43bf</sys_scope>
        <sys_update_name>sys_script_1295097b47f2f110a6b486c8436d43a7</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-12-11 16:01:10</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=1295097b47f2f110a6b486c8436d43a7"/>
</record_update>
